{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/components/base/api.ts","webpack://my-webpack-project/./src/components/base/events.ts","webpack://my-webpack-project/./src/utils/utils.ts","webpack://my-webpack-project/./src/components/base/components.ts","webpack://my-webpack-project/./src/components/Basket.ts","webpack://my-webpack-project/./src/utils/categoryMap.ts","webpack://my-webpack-project/./src/components/Card.ts","webpack://my-webpack-project/./src/components/ContactsForm.ts","webpack://my-webpack-project/./src/components/Modal.ts","webpack://my-webpack-project/./src/components/OrderForm.ts","webpack://my-webpack-project/./src/components/ProductPreview.ts","webpack://my-webpack-project/./src/utils/constants.ts","webpack://my-webpack-project/./src/index.ts"],"sourcesContent":["export class Api {\n    constructor(baseUrl, options = {}) {\n        var _a;\n        this.baseUrl = baseUrl;\n        this.options = {\n            headers: Object.assign({ 'Content-Type': 'application/json' }, ((_a = options.headers) !== null && _a !== void 0 ? _a : {}))\n        };\n    }\n    handleResponse(response) {\n        if (response.ok)\n            return response.json();\n        else\n            return response.json()\n                .then(data => { var _a; return Promise.reject((_a = data.error) !== null && _a !== void 0 ? _a : response.statusText); });\n    }\n    get(uri) {\n        return fetch(this.baseUrl + uri, Object.assign(Object.assign({}, this.options), { method: 'GET' })).then(this.handleResponse);\n    }\n    post(uri, data, method = 'POST') {\n        return fetch(this.baseUrl + uri, Object.assign(Object.assign({}, this.options), { method, body: JSON.stringify(data) })).then(this.handleResponse);\n    }\n}\n","/**\n * Брокер событий, классическая реализация\n * В расширенных вариантах есть возможность подписаться на все события\n * или слушать события по шаблону например\n */\nexport class EventEmitter {\n    constructor() {\n        this._events = new Map();\n    }\n    /**\n     * Установить обработчик на событие\n     */\n    on(eventName, callback) {\n        var _a;\n        if (!this._events.has(eventName)) {\n            this._events.set(eventName, new Set());\n        }\n        (_a = this._events.get(eventName)) === null || _a === void 0 ? void 0 : _a.add(callback);\n    }\n    /**\n     * Снять обработчик с события\n     */\n    off(eventName, callback) {\n        var _a;\n        if (this._events.has(eventName)) {\n            this._events.get(eventName).delete(callback);\n            if (((_a = this._events.get(eventName)) === null || _a === void 0 ? void 0 : _a.size) === 0) {\n                this._events.delete(eventName);\n            }\n        }\n    }\n    /**\n     * Инициировать событие с данными\n     */\n    emit(eventName, data) {\n        this._events.forEach((subscribers, name) => {\n            if (name === '*')\n                subscribers.forEach(callback => callback({\n                    eventName,\n                    data\n                }));\n            if (name instanceof RegExp && name.test(eventName) || name === eventName) {\n                subscribers.forEach(callback => callback(data));\n            }\n        });\n    }\n    /**\n     * Слушать все события\n     */\n    onAll(callback) {\n        this.on(\"*\", callback);\n    }\n    /**\n     * Сбросить все обработчики\n     */\n    offAll() {\n        this._events = new Map();\n    }\n    /**\n     * Сделать коллбек триггер, генерирующий событие при вызове\n     */\n    trigger(eventName, context) {\n        return (event = {}) => {\n            this.emit(eventName, Object.assign(Object.assign({}, (event || {})), (context || {})));\n        };\n    }\n}\n","export function pascalToKebab(value) {\n    return value.replace(/([a-z0–9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\nexport function isSelector(x) {\n    return (typeof x === \"string\") && x.length > 1;\n}\nexport function isEmpty(value) {\n    return value === null || value === undefined;\n}\nexport function ensureAllElements(selectorElement, context = document) {\n    if (isSelector(selectorElement)) {\n        return Array.from(context.querySelectorAll(selectorElement));\n    }\n    if (selectorElement instanceof NodeList) {\n        return Array.from(selectorElement);\n    }\n    if (Array.isArray(selectorElement)) {\n        return selectorElement;\n    }\n    throw new Error(`Unknown selector element`);\n}\nexport function ensureElement(selectorElement, context) {\n    if (isSelector(selectorElement)) {\n        const elements = ensureAllElements(selectorElement, context);\n        if (elements.length > 1) {\n            console.warn(`selector ${selectorElement} return more then one element`);\n        }\n        if (elements.length === 0) {\n            throw new Error(`selector ${selectorElement} return nothing`);\n        }\n        return elements.pop();\n    }\n    if (selectorElement instanceof HTMLElement) {\n        return selectorElement;\n    }\n    throw new Error('Unknown selector element');\n}\nexport function cloneTemplate(query) {\n    const template = ensureElement(query);\n    return template.content.firstElementChild.cloneNode(true);\n}\nexport function bem(block, element, modifier) {\n    let name = block;\n    if (element)\n        name += `__${element}`;\n    if (modifier)\n        name += `_${modifier}`;\n    return {\n        name,\n        class: `.${name}`\n    };\n}\nexport function getObjectProperties(obj, filter) {\n    return Object.entries(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(obj)))\n        .filter(([name, prop]) => filter ? filter(name, prop) : (name !== 'constructor'))\n        .map(([name, prop]) => name);\n}\n/**\n * Устанавливает dataset атрибуты элемента\n */\nexport function setElementData(el, data) {\n    for (const key in data) {\n        el.dataset[key] = String(data[key]);\n    }\n}\n/**\n * Получает типизированные данные из dataset атрибутов элемента\n */\nexport function getElementData(el, scheme) {\n    const data = {};\n    for (const key in el.dataset) {\n        data[key] = scheme[key](el.dataset[key]);\n    }\n    return data;\n}\n/**\n * Проверка на простой объект\n */\nexport function isPlainObject(obj) {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype === Object.getPrototypeOf({}) ||\n        prototype === null;\n}\nexport function isBoolean(v) {\n    return typeof v === 'boolean';\n}\n/**\n * Фабрика DOM-элементов в простейшей реализации\n * здесь не учтено много факторов\n * в интернет можно найти более полные реализации\n */\nexport function createElement(tagName, props, children) {\n    const element = document.createElement(tagName);\n    if (props) {\n        for (const key in props) {\n            const value = props[key];\n            if (isPlainObject(value) && key === 'dataset') {\n                setElementData(element, value);\n            }\n            else {\n                // @ts-expect-error fix indexing later\n                element[key] = isBoolean(value) ? value : String(value);\n            }\n        }\n    }\n    if (children) {\n        for (const child of Array.isArray(children) ? children : [children]) {\n            element.append(child);\n        }\n    }\n    return element;\n}\n","export class Component {\n    constructor(container) {\n        this.container = container;\n    }\n    setText(element, text) {\n        element.textContent = text;\n    }\n    setImage(element, src, alt) {\n        element.src = src;\n        element.alt = alt;\n    }\n    setDisabled(element, state) {\n        if (state) {\n            element.setAttribute('disabled', 'true');\n        }\n        else {\n            element.removeAttribute('disabled');\n        }\n    }\n    toggleClass(element, className, state) {\n        if (state) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n}\n","import { cloneTemplate, ensureElement } from \"../utils/utils\";\nimport { Component } from \"./base/components\";\nexport class Basket extends Component {\n    constructor(container, events) {\n        super(container);\n        this.events = events;\n        this.itemlist = ensureElement('.basket__list', this.container);\n        this.totalprice = ensureElement('.basket__price', this.container);\n        this.orderbutton = ensureElement('.button', this.container);\n        this.orderbutton.addEventListener('click', () => {\n            this.events.emit('order:open');\n        });\n    }\n    createBasketItem(item) {\n        const template = ensureElement('#card-basket');\n        const basketitem = cloneTemplate(template);\n        const basketitemtitle = ensureElement('.card__title', basketitem);\n        const basketitemprice = ensureElement('.card__price', basketitem);\n        const basketitembutton = ensureElement('.basket__item-delete', basketitem);\n        const basketitemindex = ensureElement('.basket__item-index', basketitem);\n        basketitemtitle.textContent = item.product.title;\n        basketitemprice.textContent = `${item.product.price} синапсов`;\n        basketitemindex.textContent = `${item.index}`;\n        basketitembutton.addEventListener('click', () => {\n            this.events.emit('basket:remove', { productId: item.product.id });\n        });\n        return basketitem;\n    }\n    render(items, totalprice) {\n        this.itemlist.innerHTML = '';\n        items.forEach(item => {\n            const itemElement = this.createBasketItem(item);\n            this.itemlist.appendChild(itemElement);\n        });\n        this.totalprice.textContent = `${totalprice} синапсов`;\n        if (items.length === 0) {\n            this.orderbutton.classList.add('button__disabled');\n            this.orderbutton.disabled = true;\n        }\n        else {\n            this.orderbutton.classList.remove('button__disabled');\n            this.orderbutton.disabled = false;\n        }\n    }\n}\n","export const categoryMap = {\n    'софт-скил': 'soft',\n    'другое': 'other',\n    'дополнительное': 'additional',\n    'кнопка': 'button',\n    'хард-скил': 'hard'\n};\n","import { Component } from \"./base/components\";\nimport { ensureElement } from \"../utils/utils\";\nimport { categoryMap } from \"../utils/categoryMap\";\nexport class Card extends Component {\n    constructor(container, events) {\n        super(container);\n        this.events = events;\n        this.title = ensureElement('.card__title', this.container);\n        this.price = ensureElement('.card__price', this.container);\n        this.image = ensureElement('.card__image', this.container);\n        this.category = ensureElement('.card__category', this.container);\n    }\n    render(data) {\n        this.title.textContent = data.title;\n        if (data.price === null) {\n            this.price.textContent = 'Бесценно';\n        }\n        else {\n            this.price.textContent = `${data.price} синапсов`;\n        }\n        this.image.src = data.image;\n        this.category.textContent = data.category;\n        const englishCategory = categoryMap[data.category] || 'other';\n        this.category.className = `card__category card__category_${englishCategory}`;\n        this.container.addEventListener('click', () => {\n            this.events.emit('card:click', { productId: data.id });\n        });\n    }\n}\n","// components/ContactsForm.ts\nimport { ensureElement } from \"../utils/utils\";\nimport { Component } from \"./base/components\";\nexport class ContactsForm extends Component {\n    constructor(container) {\n        super(container);\n        this.emailInput = ensureElement('input[name=\"email\"]', this.container);\n        this.phoneInput = ensureElement('input[name=\"phone\"]', this.container);\n        this.submitButton = ensureElement('button[type=\"submit\"]', this.container);\n        this.errorsContainer = ensureElement('.form__errors', this.container);\n        this.setupPhoneMask();\n        this.emailInput.addEventListener('input', () => this.validateForm());\n    }\n    render(data) {\n        if (data) {\n            this.emailInput.value = data.email || '';\n            this.phoneInput.value = data.phone || '';\n        }\n        this.hideErrors();\n        this.validateForm();\n        return this.container;\n    }\n    setSubmitHandler(handler) {\n        this.container.addEventListener('submit', handler);\n    }\n    setEmailHandler(handler) {\n        this.emailInput.addEventListener('input', () => {\n            handler(this.emailInput.value);\n            this.validateForm();\n        });\n    }\n    setPhoneHandler(handler) {\n        this.phoneInput.addEventListener('input', () => {\n            handler(this.phoneInput.value);\n            this.validateForm();\n        });\n    }\n    validateEmail(email) {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        return emailRegex.test(email);\n    }\n    validatePhone(phone) {\n        const phoneRegex = /^\\+7\\s?\\(\\d{3}\\)\\s?\\d{3}-\\d{2}-\\d{2}$/;\n        return phoneRegex.test(phone);\n    }\n    setupPhoneMask() {\n        this.phoneInput.addEventListener('input', (event) => {\n            const input = event.target;\n            let value = input.value;\n            if (value.length === 1 && ['+', '7', '8'].includes(value)) {\n                input.value = '';\n                return;\n            }\n            if (value.length === 0) {\n                input.value = '+7';\n                return;\n            }\n            const cleaned = value.replace(/\\D/g, '');\n            const formatted = this.formatPhone(cleaned);\n            input.value = formatted;\n            this.validateForm();\n        });\n    }\n    formatPhone(cleaned) {\n        let numbers = cleaned.startsWith('7') ? cleaned.slice(1) : cleaned;\n        if (numbers.length === 0)\n            return '+7';\n        if (numbers.length <= 3)\n            return `+7 (${numbers}`;\n        if (numbers.length <= 6)\n            return `+7 (${numbers.slice(0, 3)}) ${numbers.slice(3)}`;\n        if (numbers.length <= 8)\n            return `+7 (${numbers.slice(0, 3)}) ${numbers.slice(3, 6)}-${numbers.slice(6)}`;\n        return `+7 (${numbers.slice(0, 3)}) ${numbers.slice(3, 6)}-${numbers.slice(6, 8)}-${numbers.slice(8, 10)}`;\n    }\n    validateForm() {\n        const email = this.emailInput.value.trim();\n        const phone = this.phoneInput.value.trim();\n        const isEmailValid = this.validateEmail(email);\n        const isPhoneValid = this.validatePhone(phone);\n        this.submitButton.disabled = !(isEmailValid && isPhoneValid);\n        if (email.length > 0 || phone.length > 0) {\n            if (!isEmailValid || !isPhoneValid) {\n                const errors = [];\n                if (!isEmailValid && email.length > 0)\n                    errors.push('Введите корректный email');\n                if (!isPhoneValid && phone.length > 0)\n                    errors.push('Введите телефон в формате +7 (XXX) XXX-XX-XX');\n                this.showErrors(errors);\n            }\n            else {\n                this.hideErrors();\n            }\n        }\n    }\n    showErrors(errors) {\n        this.errorsContainer.textContent = errors.join(', ');\n        this.errorsContainer.style.display = 'block';\n    }\n    hideErrors() {\n        this.errorsContainer.textContent = '';\n        this.errorsContainer.style.display = 'none';\n    }\n    getValues() {\n        return {\n            email: this.emailInput.value.trim(),\n            phone: this.phoneInput.value.trim()\n        };\n    }\n}\n","import { ensureElement } from \"../utils/utils\";\nimport { Component } from \"./base/components\";\nexport class Modal extends Component {\n    constructor(container) {\n        super(container);\n        this.closeButton = ensureElement('.modal__close', this.container);\n        this.closeButton.addEventListener('click', () => this.close());\n        this.container.addEventListener('click', (event) => this.handleOutsideClick(event));\n    }\n    open() {\n        this.container.classList.add('modal_active');\n    }\n    close() {\n        this.container.classList.remove('modal_active');\n    }\n    setContent(content) {\n        const modalContent = ensureElement('.modal__content', this.container);\n        modalContent.innerHTML = '';\n        modalContent.appendChild(content);\n        return this;\n    }\n    handleOutsideClick(event) {\n        if (event.target === this.container) {\n            this.close();\n        }\n    }\n}\n","// components/OrderForm.ts\nimport { ensureElement } from \"../utils/utils\";\nimport { Component } from \"./base/components\";\nexport class OrderForm extends Component {\n    constructor(container) {\n        super(container);\n        this.paymentButtons = this.container.querySelectorAll('.button_alt');\n        this.addressInput = ensureElement('input[name=\"address\"]', this.container);\n        this.submitButton = ensureElement('button[type=\"submit\"]', this.container);\n        this.errorsContainer = ensureElement('.form__errors', this.container);\n    }\n    render(data) {\n        if (data) {\n            this.addressInput.value = data.address || '';\n            // Установка выбранного способа оплаты\n            this.paymentButtons.forEach(button => {\n                const isActive = button.name === data.payment;\n                button.classList.toggle('button_active', isActive);\n            });\n        }\n        this.hideErrors();\n        this.validateForm();\n        return this.container;\n    }\n    setSubmitHandler(handler) {\n        this.container.addEventListener('submit', handler);\n    }\n    setPaymentHandler(handler) {\n        this.paymentButtons.forEach(button => {\n            button.addEventListener('click', () => {\n                this.paymentButtons.forEach(btn => {\n                    btn.classList.remove('button_active');\n                    btn.classList.remove('button_alt-active');\n                });\n                button.classList.add('button_active');\n                button.classList.add('button_alt-active');\n                handler(button.name);\n                this.validateForm();\n            });\n        });\n    }\n    setAddressHandler(handler) {\n        this.addressInput.addEventListener('input', () => {\n            handler(this.addressInput.value);\n            this.validateForm();\n        });\n    }\n    validateForm() {\n        const isAddressValid = this.addressInput.value.trim().length > 0;\n        const isPaymentSelected = Array.from(this.paymentButtons).some(btn => btn.classList.contains('button_active'));\n        this.submitButton.disabled = !(isAddressValid && isPaymentSelected);\n        if (this.addressInput.value.length > 0 || isPaymentSelected) {\n            if (!isAddressValid || !isPaymentSelected) {\n                const errors = [];\n                if (!isAddressValid)\n                    errors.push('Введите адрес доставки');\n                if (!isPaymentSelected)\n                    errors.push('Выберите способ оплаты');\n                this.showErrors(errors);\n            }\n            else {\n                this.hideErrors();\n            }\n        }\n    }\n    showErrors(errors) {\n        this.errorsContainer.textContent = errors.join(', ');\n        this.errorsContainer.style.display = 'block';\n    }\n    hideErrors() {\n        this.errorsContainer.textContent = '';\n        this.errorsContainer.style.display = 'none';\n    }\n    getValues() {\n        var _a;\n        const selectedPayment = (_a = Array.from(this.paymentButtons).find(btn => btn.classList.contains('button_active'))) === null || _a === void 0 ? void 0 : _a.name;\n        return {\n            payment: selectedPayment,\n            address: this.addressInput.value.trim()\n        };\n    }\n}\n","import { categoryMap } from \"../utils/categoryMap\";\nimport { ensureElement } from \"../utils/utils\";\nimport { Component } from \"./base/components\";\nexport class ProductPreview extends Component {\n    constructor(container) {\n        super(container);\n        this.title = ensureElement('.card__title', this.container);\n        this.description = ensureElement('.card__text', this.container);\n        this.price = ensureElement('.card__price', this.container);\n        this.image = ensureElement('.card__image', this.container);\n        this.category = ensureElement('.card__category', this.container);\n        this.button = ensureElement('.card__button', this.container);\n    }\n    render(product, isInBasket) {\n        this.title.textContent = product.title;\n        this.description.textContent = product.description;\n        this.image.src = product.image;\n        if (product.price === null) {\n            this.price.textContent = 'Бесценно';\n            this.button.textContent = 'Недоступно';\n            this.button.disabled = true;\n            this.button.classList.add('button__disabled');\n        }\n        else {\n            this.price.textContent = `${product.price} синапсов`;\n            this.button.textContent = isInBasket ? 'Удалить из корзины' : 'В корзину';\n            this.button.disabled = false;\n            this.button.classList.remove('button__disabled');\n        }\n        this.category.textContent = product.category;\n        const englishCategory = categoryMap[product.category] || 'other';\n        this.category.className = `card__category card__category_${englishCategory}`;\n        return this.container;\n    }\n    setButtonHandler(handler) {\n        this.button.addEventListener('click', () => {\n            const isAdding = this.button.textContent === 'В корзину';\n            handler(isAdding);\n        });\n    }\n}\n","export const API_ORIGIN = process.env.API_ORIGIN || 'https://larek-api.nomoreparties.co';\nexport const API_URL = `${process.env.API_ORIGIN}/api/weblarek`;\nexport const CDN_URL = `${process.env.API_ORIGIN}/content/weblarek`;\nexport const settings = {};\n","import './scss/styles.scss';\nimport { Api } from './components/base/api';\nimport { EventEmitter } from './components/base/events';\nimport { Basket } from './components/Basket';\nimport { Card } from './components/Card';\nimport { ContactsForm } from './components/ContactsForm';\nimport { Modal } from './components/Modal';\nimport { OrderForm } from './components/OrderForm';\nimport { ProductPreview } from './components/ProductPreview';\nimport { API_URL, CDN_URL } from './utils/constants';\nimport { cloneTemplate, ensureAllElements, ensureElement } from './utils/utils';\nconst events = new EventEmitter();\nconst api = new Api(API_URL);\nlet catalog = [];\nexport let basketItems = [];\nconst basketList = ensureElement('.basket');\nconst gallery = ensureElement('.gallery');\nconst modals = ensureAllElements('.modal');\nconst basketButton = ensureElement('.header__basket');\nlet basketCounter = ensureElement('.header__basket-counter');\nconst previewModal = new Modal(modals[0]);\nconst basketModal = new Modal(modals[1]);\nconst orderModal = new Modal(modals[2]);\nconst succesModal = new Modal(modals[4]);\nconst basket = new Basket(basketList, events);\napi.get('/product').then((data) => {\n    catalog = data.items.map((item) => (Object.assign(Object.assign({}, item), { image: CDN_URL + item.image })));\n    catalog.forEach(product => {\n        const template = ensureElement('#card-catalog');\n        const cardElement = cloneTemplate(template);\n        const card = new Card(cardElement, events);\n        card.render(product);\n        gallery.appendChild(cardElement);\n    });\n});\nevents.on('card:click', (data) => {\n    const product = catalog.find(p => p.id === data.productId);\n    if (product) {\n        const template = ensureElement('#card-preview');\n        const previewContent = cloneTemplate(template);\n        const isInBasket = basketItems.some(item => item.product.id === product.id);\n        const preview = new ProductPreview(previewContent);\n        preview.render(product, isInBasket);\n        preview.setButtonHandler((isAdding) => {\n            if (isAdding) {\n                events.emit('basket:add', { productId: product.id });\n            }\n            else {\n                events.emit('basket:remove', { productId: product.id });\n            }\n            previewModal.close();\n        });\n        previewModal.setContent(previewContent).open();\n    }\n});\nevents.on('basket:add', (data) => {\n    const product = catalog.find(p => p.id === data.productId);\n    if (product) {\n        basketItems.push({\n            product: product,\n            index: basketItems.length + 1\n        });\n        const total = basketItems.reduce((sum, item) => sum + item.product.price, 0);\n        basket.render(basketItems, total);\n        basketCounter.textContent = `${basketItems.length}`;\n        previewModal.close();\n    }\n});\nevents.on('basket:remove', (data) => {\n    basketItems = basketItems.filter(item => item.product.id !== data.productId);\n    const total = basketItems.reduce((sum, item) => sum + item.product.price, 0);\n    basket.render(basketItems, total);\n    basketCounter.textContent = `${basketItems.length}`;\n});\nevents.on('order:open', () => {\n    const template = ensureElement('#order');\n    const orderContent = cloneTemplate(template);\n    const orderForm = new OrderForm(orderContent);\n    orderForm.render();\n    orderForm.setPaymentHandler((payment) => {\n        console.log('Payment method:', payment);\n    });\n    orderForm.setAddressHandler((address) => {\n        console.log('Address:', address);\n    });\n    orderForm.setSubmitHandler((event) => {\n        event.preventDefault();\n        const orderValues = orderForm.getValues();\n        const contactsTemplate = ensureElement('#contacts');\n        const contactsContent = cloneTemplate(contactsTemplate);\n        const contactsForm = new ContactsForm(contactsContent);\n        contactsForm.render();\n        contactsForm.setSubmitHandler((event) => {\n            event.preventDefault();\n            const contactsValues = contactsForm.getValues();\n            const orderData = {\n                payment: orderValues.payment,\n                address: orderValues.address,\n                email: contactsValues.email,\n                phone: contactsValues.phone,\n                total: basketItems.reduce((sum, item) => sum + item.product.price, 0),\n                items: basketItems.map(item => item.product.id)\n            };\n            api.post('/order', orderData)\n                .then((response) => {\n                console.log('Order success:', response);\n                events.emit('order:success', { total: response.total });\n            })\n                .catch((error) => {\n                console.error('Order error:', error.error);\n            });\n        });\n        orderModal.setContent(contactsContent);\n    });\n    orderModal.setContent(orderContent).open();\n    basketModal.close();\n});\nevents.on('order:success', (data) => {\n    const successTemplate = ensureElement('#success');\n    const successContent = cloneTemplate(successTemplate);\n    const description = ensureElement('.order-success__description', successContent);\n    description.textContent = `Списано ${data.total} синапсов`;\n    const closeButton = ensureElement('.order-success__close', successContent);\n    closeButton.addEventListener('click', () => {\n        succesModal.close();\n        orderModal.close();\n        basketItems = [];\n        basketCounter.textContent = '0';\n    });\n    succesModal.setContent(successContent).open();\n    orderModal.close();\n});\nbasketButton.addEventListener('click', () => {\n    const total = basketItems.reduce((sum, item) => sum + item.product.price, 0);\n    basket.render(basketItems, total);\n    basketModal.setContent(basketList).open();\n});\n"],"names":["Api","baseUrl","_a","options","arguments","length","undefined","_classCallCheck","this","headers","Object","assign","_createClass","key","value","handleResponse","response","ok","json","then","data","Promise","reject","error","statusText","get","uri","fetch","method","post","body","JSON","stringify","EventEmitter","_events","Map","on","eventName","callback","has","set","Set","add","off","size","emit","forEach","subscribers","name","RegExp","test","onAll","offAll","trigger","context","_this","event","isSelector","x","ensureAllElements","selectorElement","document","Array","from","querySelectorAll","NodeList","isArray","Error","ensureElement","elements","console","warn","concat","pop","HTMLElement","cloneTemplate","query","content","firstElementChild","cloneNode","Component","container","setText","element","text","textContent","setImage","src","alt","setDisabled","state","setAttribute","removeAttribute","toggleClass","className","classList","remove","Basket","_Component","_inherits","_super","_createSuper","events","call","itemlist","totalprice","orderbutton","addEventListener","createBasketItem","item","_this2","basketitem","basketitemtitle","basketitemprice","basketitembutton","basketitemindex","product","title","price","index","productId","id","render","items","_this3","innerHTML","itemElement","appendChild","disabled","categoryMap","Card","image","category","englishCategory","ContactsForm","emailInput","phoneInput","submitButton","errorsContainer","setupPhoneMask","validateForm","email","phone","hideErrors","setSubmitHandler","handler","setEmailHandler","setPhoneHandler","validateEmail","validatePhone","_this4","input","target","includes","cleaned","replace","formatted","formatPhone","numbers","startsWith","slice","trim","isEmailValid","isPhoneValid","errors","push","showErrors","join","style","display","getValues","Modal","closeButton","close","handleOutsideClick","open","setContent","modalContent","OrderForm","paymentButtons","addressInput","address","button","isActive","payment","toggle","setPaymentHandler","btn","setAddressHandler","isAddressValid","isPaymentSelected","some","contains","find","ProductPreview","description","isInBasket","setButtonHandler","isAdding","API_URL","process","CDN_URL","api","catalog","basketItems","basketList","gallery","modals","basketButton","basketCounter","previewModal","basketModal","orderModal","succesModal","basket","map","cardElement","p","previewContent","preview","total","reduce","sum","filter","orderContent","orderForm","log","preventDefault","orderValues","contactsContent","contactsForm","contactsValues","orderData","successContent"],"sourceRoot":""}